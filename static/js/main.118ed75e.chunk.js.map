{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onAddContact","className","styles","form","label","type","pattern","title","input","this","onChange","required","btn","onClick","Component","ContactList","contacts","onDeleteContact","list","map","id","item","Filter","App","filter","addContact","find","contact","toLowerCase","toLocaleLowerCase","alert","shortid","generate","prevState","deleteContact","contactId","changeFilter","totalContactsCount","length","normalizedFilter","visibleContacts","includes","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.118ed75e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__n6tpv\",\"btn\":\"Filter_btn__oCHcd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3B7vP\",\"label\":\"ContactForm_label__3UF1K\",\"input\":\"ContactForm_input__m2SCH\",\"btn\":\"ContactForm_btn__14HdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__331rQ\",\"item\":\"ContactList_item__2eDJg\",\"name\":\"ContactList_name__3jexZ\",\"btn\":\"ContactList_btn__TTnwf\"};","import React, { Component } from 'react';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = (event) => {\n        this.setState({[event.currentTarget.name]: event.currentTarget.value})\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.onAddContact(this.state.name, this.state.number);\n        this.setState({ name: '', number: '' });\n    }\n\n    render() {\n        return(\n            <form className={styles.form} >\n                <label className={styles.label}>Name: \n                    <input type=\"text\" name=\"name\" pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\" \n                    className={styles.input}\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                    required />\n                </label>\n                <label className={styles.label}>Number: \n                    <input type=\"tel\" name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    className={styles.input} value={this.state.number} onChange={this.handleChange} required />\n                </label>\n                <button type=\"button\" \n                className={styles.btn} onClick={this.handleSubmit}>\n                    Add contact\n                </button>\n            </form>\n        )\n    }\n}\n\nexport default ContactForm;","import React from 'react';\nimport styles from './ContactList.module.css';\n\nconst ContactList =  ({ contacts, onDeleteContact }) => (\n    <ul className={styles.list}>\n        {contacts.map( ({ id, name, number }) => (\n            <li key={id} className={styles.item}>\n                <p className={styles.name}>{name}: <span>{number}</span></p>\n                <button type=\"button\" className={styles.btn} onClick={()=> onDeleteContact(id)}>Delete</button>\n            </li>\n        ) )\n        }\n    </ul>\n);\n\n\nexport default ContactList;","import React, { Component } from 'react';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n    <label className={styles.label}>\n        Find contacts by name\n        <input className={styles.input} type=\"text\" value={value} onChange={onChange}/>\n    </label>\n);\n\nexport default Filter;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport './App.css';\r\n\r\nimport ContactForm from './Components/ContactForm';\r\nimport ContactList from './Components/ContactList';\r\nimport Filter from './Components/Filter';\r\n\r\nclass App extends Component {\r\n    static defaultProps = {\r\n    totalContactsCount: null,\r\n    visibleContacts: null,\r\n  }\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape(\r\n        {\r\n          id: PropTypes.any.isRequired,\r\n          name: PropTypes.string.isRequired,\r\n          number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    filter: PropTypes.string,\r\n    totalContactsCount: PropTypes.number,\r\n    visibleContacts: PropTypes.number,\r\n  };\r\n  state = {\r\n    contacts: [\r\n      {id: 'id-1', name: 'Margo Robins', number: '093-144-15-14'},\r\n      {id: 'id-2', name: 'Damon Crunk', number: '095-111-12-23'},\r\n      {id: 'id-3', name: 'Paulo Swit ', number: '078-137-22-79'},\r\n      {id: 'id-4', name: 'Mango Candy', number: '050-932-15-26'},\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n \r\n    if (this.state.contacts.find((contact) => name.toLowerCase() === contact.name.toLocaleLowerCase()))\r\n    {\r\n      alert(`${name} is already in contacts.`); return;\r\n    } else if (name && number) {\r\n      const contact = {\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n      };\r\n      this.setState(prevState => ({\r\n        contacts: [contact, ...prevState.contacts],\r\n      }));\r\n    } else {\r\n      alert (`Please enter a name for contact ${name}!`)\r\n    }\r\n  };\r\n\r\n  deleteContact = (contactId => {\r\n    this.setState( prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)}))\r\n    }\r\n  );\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value })\r\n  }\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const totalContactsCount = contacts.length;\r\n\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm contacts={contacts} onAddContact={this.addContact} />\r\n\r\n        <h2>Contacts (total: {totalContactsCount}) </h2>\r\n        <Filter value={filter} onChange={this.changeFilter}/>\r\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\r\n      </div>        \r\n    );\r\n  }  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}